<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="im.zhaojun.zfile.module.link.mapper.ShortLinkMapper">
    <resultMap id="BaseResultMap" type="im.zhaojun.zfile.module.link.model.entity.ShortLink">
        <!--@mbg.generated-->
        <!--@Table short_link-->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="short_key" jdbcType="VARCHAR" property="shortKey"/>
        <result column="url" jdbcType="LONGVARCHAR" property="url"/>
        <result column="create_date" jdbcType="DATE" property="createDate"/>
        <result column="storage_id" jdbcType="INTEGER" property="storageId"/>
        <result column="expire_date" jdbcType="DATE" property="expireDate"/>
    </resultMap>
    
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        <choose>
            <when test="_databaseId == 'postgresql'">
                "id", "short_key", "url", "create_date", "storage_id", "expire_date"
            </when>
            <otherwise>
                id, short_key, url, create_date, storage_id, expire_date
            </otherwise>
        </choose>
    </sql>

    <sql id="Column_ShortKey">
        <choose>
            <when test="_databaseId == 'postgresql'">"short_key"</when>
            <otherwise>`short_key`</otherwise>
        </choose>
    </sql>

    <sql id="Column_StorageId">
        <choose>
            <when test="_databaseId == 'postgresql'">"storage_id"</when>
            <otherwise>`storage_id`</otherwise>
        </choose>
    </sql>

    <update id="updateUrlStorageId">
        update short_link set url = replace(url, #{updateSubPath}, #{newSubPath})
    </update>

    <select id="findByKey" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/>
        from short_link
        where <include refid="Column_ShortKey"/> = #{key,jdbcType=VARCHAR}
    </select>

    <select id="findByStorageIdAndUrl" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/>
        from short_link
        where url = #{url,jdbcType=LONGVARCHAR} 
        and <include refid="Column_StorageId"/> = #{storageId,jdbcType=INTEGER} 
        limit 1
    </select>

    <delete id="deleteByStorageId">
        delete from short_link 
        where <include refid="Column_StorageId"/> = #{storageId}
    </delete>
</mapper>