<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="im.zhaojun.zfile.module.storage.mapper.StorageSourceConfigMapper">
    <resultMap id="BaseResultMap" type="im.zhaojun.zfile.module.storage.model.entity.StorageSourceConfig">
        <!--@mbg.generated-->
        <!--@Table storage_source_config-->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="type" jdbcType="LONGVARCHAR" property="type"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="storage_id" jdbcType="INTEGER" property="storageId"/>
        <result column="value" jdbcType="LONGVARCHAR" property="value"/>
    </resultMap>

    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        <choose>
            <when test="_databaseId == 'postgresql'">
                "id", "name", "type", "title", "storage_id", "value"
            </when>
            <otherwise>
                id, `name`, `type`, title, storage_id, `value`
            </otherwise>
        </choose>
    </sql>

    <sql id="Column_Type">
        <choose>
            <when test="_databaseId == 'postgresql'">"type"</when>
            <otherwise>`type`</otherwise>
        </choose>
    </sql>

    <sql id="Column_StorageId">
        <choose>
            <when test="_databaseId == 'postgresql'">"storage_id"</when>
            <otherwise>`storage_id`</otherwise>
        </choose>
    </sql>

    <select id="findByTypeOrderById" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/>
        from storage_source_config
        where <include refid="Column_Type"/> = #{type,jdbcType=LONGVARCHAR} 
        order by id
    </select>

    <select id="findByStorageIdOrderById" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/>
        from storage_source_config
        where <include refid="Column_StorageId"/> = #{storageId,jdbcType=INTEGER} 
        order by id
    </select>

    <delete id="deleteByStorageId">
        delete from storage_source_config
        where <include refid="Column_StorageId"/> = #{storageId,jdbcType=INTEGER}
    </delete>

    <insert id="insertList" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO storage_source_config(
        <choose>
            <when test="_databaseId == 'postgresql'">
                "name", "type", "title", "storage_id", "value"
            </when>
            <otherwise>
                name, type, title, storage_id, value
            </otherwise>
        </choose>
        )VALUES
        <foreach collection="list" item="element" index="index" separator=",">
            (
            #{element.name,jdbcType=VARCHAR},
            #{element.type,jdbcType=LONGVARCHAR},
            #{element.title,jdbcType=VARCHAR},
            #{element.storageId,jdbcType=INTEGER},
            #{element.value,jdbcType=LONGVARCHAR}
            )
        </foreach>
    </insert>
</mapper>